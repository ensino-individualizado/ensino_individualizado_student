/**
 * This class is generated by jOOQ
 */
package DAO.mysql.generatedclasses.tables;


import DAO.mysql.generatedclasses.Ensinoindividualizado;
import DAO.mysql.generatedclasses.Keys;
import DAO.mysql.generatedclasses.tables.records.TipoblocoRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tipobloco extends TableImpl<TipoblocoRecord> {

	private static final long serialVersionUID = 1738916431;

	/**
	 * The reference instance of <code>ensinoindividualizado.tipobloco</code>
	 */
	public static final Tipobloco TIPOBLOCO = new Tipobloco();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TipoblocoRecord> getRecordType() {
		return TipoblocoRecord.class;
	}

	/**
	 * The column <code>ensinoindividualizado.tipobloco.idtipobloco</code>.
	 */
	public final TableField<TipoblocoRecord, Integer> IDTIPOBLOCO = createField("idtipobloco", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>ensinoindividualizado.tipobloco.descricao</code>.
	 */
	public final TableField<TipoblocoRecord, String> DESCRICAO = createField("descricao", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * Create a <code>ensinoindividualizado.tipobloco</code> table reference
	 */
	public Tipobloco() {
		this("tipobloco", null);
	}

	/**
	 * Create an aliased <code>ensinoindividualizado.tipobloco</code> table reference
	 */
	public Tipobloco(String alias) {
		this(alias, TIPOBLOCO);
	}

	private Tipobloco(String alias, Table<TipoblocoRecord> aliased) {
		this(alias, aliased, null);
	}

	private Tipobloco(String alias, Table<TipoblocoRecord> aliased, Field<?>[] parameters) {
		super(alias, Ensinoindividualizado.ENSINOINDIVIDUALIZADO, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TipoblocoRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TIPOBLOCO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TipoblocoRecord> getPrimaryKey() {
		return Keys.KEY_TIPOBLOCO_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TipoblocoRecord>> getKeys() {
		return Arrays.<UniqueKey<TipoblocoRecord>>asList(Keys.KEY_TIPOBLOCO_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Tipobloco as(String alias) {
		return new Tipobloco(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Tipobloco rename(String name) {
		return new Tipobloco(name, null);
	}
}
