/**
 * This class is generated by jOOQ
 */
package DAO.mysql.generatedclasses.tables;


import DAO.mysql.generatedclasses.Ensinoindividualizado;
import DAO.mysql.generatedclasses.Keys;
import DAO.mysql.generatedclasses.tables.records.CategoriaRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Categoria extends TableImpl<CategoriaRecord> {

	private static final long serialVersionUID = 1565079642;

	/**
	 * The reference instance of <code>ensinoindividualizado.categoria</code>
	 */
	public static final Categoria CATEGORIA = new Categoria();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CategoriaRecord> getRecordType() {
		return CategoriaRecord.class;
	}

	/**
	 * The column <code>ensinoindividualizado.categoria.idcategoria</code>.
	 */
	public final TableField<CategoriaRecord, Integer> IDCATEGORIA = createField("idcategoria", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>ensinoindividualizado.categoria.nome</code>.
	 */
	public final TableField<CategoriaRecord, String> NOME = createField("nome", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>ensinoindividualizado.categoria.descricao</code>.
	 */
	public final TableField<CategoriaRecord, String> DESCRICAO = createField("descricao", org.jooq.impl.SQLDataType.VARCHAR.length(2048).nullable(false), this, "");

	/**
	 * Create a <code>ensinoindividualizado.categoria</code> table reference
	 */
	public Categoria() {
		this("categoria", null);
	}

	/**
	 * Create an aliased <code>ensinoindividualizado.categoria</code> table reference
	 */
	public Categoria(String alias) {
		this(alias, CATEGORIA);
	}

	private Categoria(String alias, Table<CategoriaRecord> aliased) {
		this(alias, aliased, null);
	}

	private Categoria(String alias, Table<CategoriaRecord> aliased, Field<?>[] parameters) {
		super(alias, Ensinoindividualizado.ENSINOINDIVIDUALIZADO, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CategoriaRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CATEGORIA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CategoriaRecord> getPrimaryKey() {
		return Keys.KEY_CATEGORIA_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CategoriaRecord>> getKeys() {
		return Arrays.<UniqueKey<CategoriaRecord>>asList(Keys.KEY_CATEGORIA_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Categoria as(String alias) {
		return new Categoria(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Categoria rename(String name) {
		return new Categoria(name, null);
	}
}
