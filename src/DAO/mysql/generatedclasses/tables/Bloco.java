/**
 * This class is generated by jOOQ
 */
package DAO.mysql.generatedclasses.tables;


import DAO.mysql.generatedclasses.Ensinoindividualizado;
import DAO.mysql.generatedclasses.Keys;
import DAO.mysql.generatedclasses.tables.records.BlocoRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Bloco extends TableImpl<BlocoRecord> {

	private static final long serialVersionUID = -1700756163;

	/**
	 * The reference instance of <code>ensinoindividualizado.bloco</code>
	 */
	public static final Bloco BLOCO = new Bloco();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<BlocoRecord> getRecordType() {
		return BlocoRecord.class;
	}

	/**
	 * The column <code>ensinoindividualizado.bloco.idbloco</code>.
	 */
	public final TableField<BlocoRecord, Integer> IDBLOCO = createField("idbloco", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>ensinoindividualizado.bloco.idtipobloco</code>.
	 */
	public final TableField<BlocoRecord, Integer> IDTIPOBLOCO = createField("idtipobloco", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>ensinoindividualizado.bloco</code> table reference
	 */
	public Bloco() {
		this("bloco", null);
	}

	/**
	 * Create an aliased <code>ensinoindividualizado.bloco</code> table reference
	 */
	public Bloco(String alias) {
		this(alias, BLOCO);
	}

	private Bloco(String alias, Table<BlocoRecord> aliased) {
		this(alias, aliased, null);
	}

	private Bloco(String alias, Table<BlocoRecord> aliased, Field<?>[] parameters) {
		super(alias, Ensinoindividualizado.ENSINOINDIVIDUALIZADO, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<BlocoRecord, Integer> getIdentity() {
		return Keys.IDENTITY_BLOCO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<BlocoRecord> getPrimaryKey() {
		return Keys.KEY_BLOCO_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<BlocoRecord>> getKeys() {
		return Arrays.<UniqueKey<BlocoRecord>>asList(Keys.KEY_BLOCO_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<BlocoRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<BlocoRecord, ?>>asList(Keys.FK_BLOCO_TIPOBLOCO1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Bloco as(String alias) {
		return new Bloco(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Bloco rename(String name) {
		return new Bloco(name, null);
	}
}
